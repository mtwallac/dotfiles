[alias]
	# Prettier git `log`
	grog = log --pretty=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)' --graph --abbrev-commit --decorate --all

	# Initialize a repository and commit an empty commit
	it = !git init && git commit -m “root” --allow-empty

	# Add everything and commit with a message
	acm = !git add -A && git commit

	# Discard a file you don't want to commit
	dis = checkout --

	# Git `commit` shorthand
	cm = commit
	cmm = commit -m

	# Git `status` with shorthand output
	st = status -bs
	sti = status -bs --ignored

	# Git `checkout` shorthand
	co = checkout
	cob = checkout -b

	# Commit files in the staging area to the last commit
	commend = commit --amend --no-edit
	
	# Update list remote branches [https://stackoverflow.com/questions/36358265/when-does-git-refresh-the-list-of-remote-branches]
	prune = git remote update origin --prune

	# Stash everything
	stash-all = stash save --include-untracked

	# Push and set upstream for current branch to a specified remote
	upstream = push --set-upstream origin
	
	# Soft reset
	undo = reset --soft HEAD^

	# Unstage from the the staging area
	unstage = reset HEAD

	# Purge cache for gitignore
	purge = !git rm -r --cached . && git add .
	
	# Delete local branch
	dlb = git branch -d 
	
	# Force delete local and remote branch
	dbf = git branch -D 

	# Mark a file as "assume unchanged"
	assume = update-index --assume-unchanged
	# Reverse the above
	unassume = update-index --no-assume-unchanged
	# Show the files that are currently assume-unchanged
	assumed = !git ls-files -v | grep ^h | cut -c 3-

	# List contributors with number of commits
	who = shortlog -sn
	

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	active = ls-remote --heads origin

	# List branches sorted by last modified
	b = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"

[color]
	ui = auto

[commit]
	template = ~/.gitmessage

[core]
	# Global .gitignore
	excludesfile = ~/.gitignore.global

[include]
	# Custom .gitconfig
	path = ~/.gitconfig.local

[push]
	default = simple
	followTags = true

[status]
	showUntrackedFiles = all
